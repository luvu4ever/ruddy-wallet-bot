import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# =============================================================================
# CATEGORY CONFIGURATION - CHANGE EVERYTHING HERE
# =============================================================================
CATEGORIES = {
    "ƒÉn u·ªëng": {
        "emoji": "üçú",
        "description": "food & drinks",
        "ai_keywords": ["food", "drink", "restaurant", "coffee", "b√∫n", "ph·ªü", "c∆°m", "n∆∞·ªõc"],
        "examples": ["b√∫n b√≤ hu·∫ø", "c√† ph√™", "c∆°m tr∆∞a"]
    },
    "di chuy·ªÉn": {
        "emoji": "üöó",
        "description": "transportation",
        "ai_keywords": ["transport", "taxi", "bus", "fuel", "xe √¥m", "grab", "xƒÉng", "v√© xe"],
        "examples": ["xe √¥m", "xƒÉng xe", "v√© bus"]
    },
    "h√≥a ƒë∆°n": {
        "emoji": "üìÑ",
        "description": "bills & utilities",
        "ai_keywords": ["bill", "utility", "rent", "insurance", "ƒëi·ªán", "n∆∞·ªõc", "internet", "thu√™ nh√†"],
        "examples": ["ti·ªÅn ƒëi·ªán", "ti·ªÅn n∆∞·ªõc", "thu√™ nh√†"]
    },
    "c√° nh√¢n": {
        "emoji": "üõçÔ∏è",
        "description": "personal (entertainment + shopping)",
        "ai_keywords": ["entertainment", "shopping", "clothes", "movie", "game", "book", "√°o", "qu·∫ßn", "phim"],
        "examples": ["√°o s∆° mi", "xem phim", "mua s√°ch"]
    },
    "m√®o": {
        "emoji": "üê±",
        "description": "cat expenses",
        "ai_keywords": ["cat", "pet", "m√®o", "c√°t m√®o", "th·ª©c ƒÉn m√®o", "thu·ªëc m√®o"],
        "examples": ["c√°t m√®o", "th·ª©c ƒÉn m√®o", "thu·ªëc m√®o"]
    },
    "c√¥ng tr√¨nh": {
        "emoji": "üèóÔ∏è",
        "description": "large furniture/construction items",
        "ai_keywords": ["large furniture", "construction", "sofa", "t·ªß l·∫°nh", "gi∆∞·ªùng", "b√†n l·ªõn", "renovation"],
        "examples": ["sofa da", "t·ªß l·∫°nh", "gi∆∞·ªùng ng·ªß"]
    },
    "linh tinh": {
        "emoji": "üîß",
        "description": "small miscellaneous items",
        "ai_keywords": ["small items", "tools", "accessories", "ƒë√®n nh·ªè", "ly t√°ch", "dao k√©o", "d·ª•ng c·ª•"],
        "examples": ["ƒë√®n ng·ªß", "ly t√°ch", "dao k√©o"]
    },
    "kh√°c": {
        "emoji": "üìÇ",
        "description": "other",
        "ai_keywords": ["other", "misc", "kh√°c"],
        "examples": ["c√°c kho·∫£n kh√°c"]
    }
}

# Derived data - auto-generated from CATEGORIES
EXPENSE_CATEGORIES = list(CATEGORIES.keys())

# Helper functions
def get_category_emoji(category):
    """Get emoji for category"""
    return CATEGORIES.get(category, {}).get("emoji", "üìÇ")

def get_category_description(category):
    """Get description for category"""
    return CATEGORIES.get(category, {}).get("description", "unknown")

def get_category_examples(category):
    """Get examples for category"""
    return CATEGORIES.get(category, {}).get("examples", [])

def get_all_category_info():
    """Get formatted category info for display"""
    return "\n".join([f"‚Ä¢ {cat} {get_category_emoji(cat)} - {get_category_description(cat)}" 
                     for cat in EXPENSE_CATEGORIES])

def get_ai_categorization_rules():
    """Generate AI categorization rules from config"""
    rules = []
    for category, info in CATEGORIES.items():
        keywords = ", ".join(info["ai_keywords"])
        rules.append(f"- For {info['description']} ({keywords}), use \"{category}\" category")
    return "\n".join(rules)

def get_category_list_display():
    """Get category list for console display"""
    return ", ".join(EXPENSE_CATEGORIES)

# =============================================================================
# OTHER CONFIGURATION
# =============================================================================

# Allowed users
ALLOWED_USERS = [int(uid) for uid in os.getenv("ALLOWED_USERS").split(",")]

# Environment variables
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")